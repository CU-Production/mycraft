#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc --input block.glsl --output block.glsl.h --slang glsl410:hlsl5:metal_macos:wgsl

    Overview:
    =========
    Shader program: 'block':
        Get shader desc: block_shader_desc(sg_query_backend());
        Vertex Shader: vs
        Fragment Shader: fs
        Attributes:
            ATTR_block_position => 0
            ATTR_block_normal => 1
            ATTR_block_uv => 2
    Bindings:
        Uniform block 'block_vs_params':
            C struct: block_vs_params_t
            Bind slot: UB_block_vs_params => 0
        Uniform block 'block_ps_params':
            C struct: block_ps_params_t
            Bind slot: UB_block_ps_params => 1
        Image 'block_color_tex':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_block_color_tex => 0
        Image 'block_sky_tex':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_block_sky_tex => 1
        Sampler 'block_color_smp':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_block_color_smp => 0
        Sampler 'block_sky_smp':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_block_sky_smp => 1
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before block.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_block_position (0)
#define ATTR_block_normal (1)
#define ATTR_block_uv (2)
#define UB_block_vs_params (0)
#define UB_block_ps_params (1)
#define IMG_block_color_tex (0)
#define IMG_block_sky_tex (1)
#define SMP_block_color_smp (0)
#define SMP_block_sky_smp (1)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct block_vs_params_t {
    HMM_Mat4 matrix;
    HMM_Vec3 camera;
    float fog_distance;
    int ortho;
    uint8_t _pad_84[12];
} block_vs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct block_ps_params_t {
    float timer;
    float daylight;
    int ortho;
    uint8_t _pad_12[4];
} block_ps_params_t;
#pragma pack(pop)
/*
    #version 410

    struct block_vs_params
    {
        mat4 matrix;
        vec3 camera;
        float fog_distance;
        int ortho;
    };

    uniform block_vs_params _20;

    layout(location = 0) in vec4 position;
    layout(location = 0) out vec2 fragment_uv;
    layout(location = 2) in vec4 uv;
    layout(location = 1) out float fragment_ao;
    layout(location = 2) out float fragment_light;
    layout(location = 5) out float diffuse;
    layout(location = 1) in vec3 normal;
    layout(location = 3) out float fog_factor;
    layout(location = 4) out float fog_height;

    void main()
    {
        gl_Position = _20.matrix * position;
        fragment_uv = uv.xy;
        fragment_ao = 0.300000011920928955078125 + ((1.0 - uv.z) * 0.699999988079071044921875);
        fragment_light = uv.w;
        diffuse = max(0.0, dot(normal, vec3(-0.57735025882720947265625, 0.57735025882720947265625, -0.57735025882720947265625)));
        if (_20.ortho != int(0u))
        {
            fog_factor = 0.0;
            fog_height = 0.0;
        }
        else
        {
            fog_factor = pow(clamp(distance(_20.camera, vec3(position.xyz)) / _20.fog_distance, 0.0, 1.0), 4.0);
            fog_height = (atan(position.y - _20.camera.y, distance(position.xz, _20.camera.xz)) + 1.57079637050628662109375) * 0.3183098733425140380859375;
        }
    }

*/
static const uint8_t vs_source_glsl410[1221] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,
    0x6d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x63,0x61,0x6d,0x65,0x72,0x61,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6f,0x72,0x74,0x68,0x6f,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x62,0x6c,0x6f,0x63,
    0x6b,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x5f,0x32,0x30,0x3b,
    0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,
    0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,
    0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x32,0x29,0x20,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x35,0x29,0x20,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,
    0x66,0x61,0x63,0x74,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x6f,0x75,0x74,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,
    0x74,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x5f,0x32,0x30,0x2e,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x2a,
    0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x20,0x3d,0x20,0x75,0x76,0x2e,
    0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,
    0x5f,0x61,0x6f,0x20,0x3d,0x20,0x30,0x2e,0x33,0x30,0x30,0x30,0x30,0x30,0x30,0x31,
    0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,
    0x20,0x2b,0x20,0x28,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x75,0x76,0x2e,0x7a,0x29,
    0x20,0x2a,0x20,0x30,0x2e,0x36,0x39,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x30,0x37,
    0x39,0x30,0x37,0x31,0x30,0x34,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x20,0x3d,0x20,0x75,0x76,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x30,0x2e,0x30,
    0x2c,0x20,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x28,0x2d,0x30,0x2e,0x35,0x37,0x37,0x33,0x35,0x30,0x32,0x35,0x38,0x38,
    0x32,0x37,0x32,0x30,0x39,0x34,0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,
    0x2e,0x35,0x37,0x37,0x33,0x35,0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,
    0x34,0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x35,0x37,0x37,
    0x33,0x35,0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,0x34,0x37,0x32,0x36,
    0x35,0x36,0x32,0x35,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x32,0x30,0x2e,0x6f,0x72,0x74,0x68,0x6f,0x20,0x21,0x3d,0x20,0x69,0x6e,
    0x74,0x28,0x30,0x75,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x20,
    0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,
    0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x20,0x3d,0x20,0x70,0x6f,0x77,0x28,0x63,
    0x6c,0x61,0x6d,0x70,0x28,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,0x28,0x5f,0x32,
    0x30,0x2e,0x63,0x61,0x6d,0x65,0x72,0x61,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x79,0x7a,0x29,0x29,0x20,0x2f,0x20,
    0x5f,0x32,0x30,0x2e,0x66,0x6f,0x67,0x5f,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x34,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x67,0x5f,0x68,
    0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x28,0x61,0x74,0x61,0x6e,0x28,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x79,0x20,0x2d,0x20,0x5f,0x32,0x30,0x2e,0x63,
    0x61,0x6d,0x65,0x72,0x61,0x2e,0x79,0x2c,0x20,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,
    0x65,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x7a,0x2c,0x20,0x5f,
    0x32,0x30,0x2e,0x63,0x61,0x6d,0x65,0x72,0x61,0x2e,0x78,0x7a,0x29,0x29,0x20,0x2b,
    0x20,0x31,0x2e,0x35,0x37,0x30,0x37,0x39,0x36,0x33,0x37,0x30,0x35,0x30,0x36,0x32,
    0x38,0x36,0x36,0x32,0x31,0x30,0x39,0x33,0x37,0x35,0x29,0x20,0x2a,0x20,0x30,0x2e,
    0x33,0x31,0x38,0x33,0x30,0x39,0x38,0x37,0x33,0x33,0x34,0x32,0x35,0x31,0x34,0x30,
    0x33,0x38,0x30,0x38,0x35,0x39,0x33,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 410

    struct block_ps_params
    {
        float timer;
        float daylight;
        int ortho;
    };

    uniform block_ps_params _53;

    uniform sampler2D block_color_tex_block_color_smp;
    uniform sampler2D block_sky_tex_block_sky_smp;

    layout(location = 0) in vec2 fragment_uv;
    layout(location = 5) in float diffuse;
    layout(location = 1) in float fragment_ao;
    layout(location = 2) in float fragment_light;
    layout(location = 4) in float fog_height;
    layout(location = 3) in float fog_factor;
    layout(location = 0) out vec4 fragColor;

    void main()
    {
        vec3 _29 = vec3(texture(block_color_tex_block_color_smp, fragment_uv).xyz);
        vec3 color = _29;
        if (all(equal(_29, vec3(1.0, 0.0, 1.0))))
        {
            discard;
        }
        bool _46 = all(equal(color, vec3(1.0)));
        bool _61;
        if (_46)
        {
            _61 = _53.ortho != int(0u);
        }
        else
        {
            _61 = _46;
        }
        if (_61)
        {
            discard;
        }
        float _68;
        if (_46)
        {
            _68 = 1.0 - (diffuse * 0.20000000298023223876953125);
        }
        else
        {
            _68 = diffuse;
        }
        float df = _68;
        float _82;
        if (_46)
        {
            _82 = 1.0 - ((1.0 - fragment_ao) * 0.20000000298023223876953125);
        }
        else
        {
            _82 = fragment_ao;
        }
        float _98 = df;
        float _101 = min(1.0, _98 + fragment_light);
        df = _101;
        vec3 _115 = vec3((min(1.0, _53.daylight + fragment_light) * 0.300000011920928955078125) + 0.20000000298023223876953125);
        vec3 _127 = color;
        vec3 _156 = mix(clamp((_127 * (_115 + (_115 * _101))) * min(1.0, _82 + fragment_light), vec3(0.0), vec3(1.0)), vec3(texture(block_sky_tex_block_sky_smp, vec2(_53.timer, fog_height)).xyz), vec3(fog_factor));
        color = _156;
        fragColor = vec4(_156, 1.0);
    }

*/
static const uint8_t fs_source_glsl410[1739] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x70,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x74,0x69,0x6d,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x64,0x61,0x79,0x6c,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x6f,0x72,0x74,0x68,0x6f,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x70,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x5f,0x35,0x33,0x3b,0x0a,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x62,
    0x6c,0x6f,0x63,0x6b,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x74,0x65,0x78,0x5f,0x62,
    0x6c,0x6f,0x63,0x6b,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x73,0x6d,0x70,0x3b,0x0a,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,
    0x44,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x74,0x65,0x78,0x5f,
    0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x72,0x61,
    0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x35,0x29,0x20,0x69,
    0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,
    0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,
    0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,
    0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,
    0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,
    0x68,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,
    0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x32,0x39,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x28,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x74,0x65,
    0x78,0x5f,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x73,0x6d,
    0x70,0x2c,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x29,0x2e,
    0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x32,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x61,0x6c,0x6c,0x28,0x65,0x71,0x75,0x61,0x6c,0x28,0x5f,0x32,
    0x39,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,
    0x5f,0x34,0x36,0x20,0x3d,0x20,0x61,0x6c,0x6c,0x28,0x65,0x71,0x75,0x61,0x6c,0x28,
    0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x36,0x31,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x36,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x31,
    0x20,0x3d,0x20,0x5f,0x35,0x33,0x2e,0x6f,0x72,0x74,0x68,0x6f,0x20,0x21,0x3d,0x20,
    0x69,0x6e,0x74,0x28,0x30,0x75,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x31,0x20,0x3d,0x20,0x5f,0x34,0x36,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x36,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x38,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x36,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x38,0x20,0x3d,
    0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,
    0x2a,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,
    0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,
    0x38,0x20,0x3d,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x66,0x20,
    0x3d,0x20,0x5f,0x36,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x38,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,
    0x36,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x5f,0x38,0x32,0x20,0x3d,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x28,0x31,
    0x2e,0x30,0x20,0x2d,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,
    0x29,0x20,0x2a,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,
    0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,
    0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x38,0x32,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,
    0x6f,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x39,0x38,0x20,0x3d,0x20,0x64,0x66,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x31,0x20,0x3d,0x20,0x6d,0x69,
    0x6e,0x28,0x31,0x2e,0x30,0x2c,0x20,0x5f,0x39,0x38,0x20,0x2b,0x20,0x66,0x72,0x61,
    0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x64,0x66,0x20,0x3d,0x20,0x5f,0x31,0x30,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x31,0x35,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x33,0x28,0x28,0x6d,0x69,0x6e,0x28,0x31,0x2e,0x30,0x2c,0x20,0x5f,0x35,0x33,0x2e,
    0x64,0x61,0x79,0x6c,0x69,0x67,0x68,0x74,0x20,0x2b,0x20,0x66,0x72,0x61,0x67,0x6d,
    0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x29,0x20,0x2a,0x20,0x30,0x2e,0x33,
    0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,
    0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x20,0x2b,0x20,0x30,0x2e,0x32,0x30,0x30,
    0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,
    0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x31,0x32,0x37,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x35,0x36,0x20,0x3d,
    0x20,0x6d,0x69,0x78,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,0x5f,0x31,0x32,0x37,
    0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,0x35,0x20,0x2b,0x20,0x28,0x5f,0x31,0x31,0x35,
    0x20,0x2a,0x20,0x5f,0x31,0x30,0x31,0x29,0x29,0x29,0x20,0x2a,0x20,0x6d,0x69,0x6e,
    0x28,0x31,0x2e,0x30,0x2c,0x20,0x5f,0x38,0x32,0x20,0x2b,0x20,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x29,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,
    0x29,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x74,0x65,0x78,0x5f,0x62,
    0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x76,0x65,
    0x63,0x32,0x28,0x5f,0x35,0x33,0x2e,0x74,0x69,0x6d,0x65,0x72,0x2c,0x20,0x66,0x6f,
    0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x2c,
    0x20,0x76,0x65,0x63,0x33,0x28,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x5f,0x31,0x35,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x35,0x36,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    cbuffer block_vs_params : register(b0)
    {
        row_major float4x4 _20_matrix : packoffset(c0);
        float3 _20_camera : packoffset(c4);
        float _20_fog_distance : packoffset(c4.w);
        int _20_ortho : packoffset(c5);
    };


    static float4 gl_Position;
    static float4 position;
    static float2 fragment_uv;
    static float4 uv;
    static float fragment_ao;
    static float fragment_light;
    static float diffuse;
    static float3 normal;
    static float fog_factor;
    static float fog_height;

    struct SPIRV_Cross_Input
    {
        float4 position : TEXCOORD0;
        float3 normal : TEXCOORD1;
        float4 uv : TEXCOORD2;
    };

    struct SPIRV_Cross_Output
    {
        float2 fragment_uv : TEXCOORD0;
        float fragment_ao : TEXCOORD1;
        float fragment_light : TEXCOORD2;
        float fog_factor : TEXCOORD3;
        float fog_height : TEXCOORD4;
        float diffuse : TEXCOORD5;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        gl_Position = mul(position, _20_matrix);
        fragment_uv = uv.xy;
        fragment_ao = 0.300000011920928955078125f + ((1.0f - uv.z) * 0.699999988079071044921875f);
        fragment_light = uv.w;
        diffuse = max(0.0f, dot(normal, float3(-0.57735025882720947265625f, 0.57735025882720947265625f, -0.57735025882720947265625f)));
        if (_20_ortho != int(0u))
        {
            fog_factor = 0.0f;
            fog_height = 0.0f;
        }
        else
        {
            fog_factor = pow(clamp(distance(_20_camera, float3(position.xyz)) / _20_fog_distance, 0.0f, 1.0f), 4.0f);
            fog_height = (atan2(position.y - _20_camera.y, distance(position.xz, _20_camera.xz)) + 1.57079637050628662109375f) * 0.3183098733425140380859375f;
        }
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        position = stage_input.position;
        uv = stage_input.uv;
        normal = stage_input.normal;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.fragment_uv = fragment_uv;
        stage_output.fragment_ao = fragment_ao;
        stage_output.fragment_light = fragment_light;
        stage_output.diffuse = diffuse;
        stage_output.fog_factor = fog_factor;
        stage_output.fog_height = fog_height;
        return stage_output;
    }
*/
static const uint8_t vs_source_hlsl5[2135] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,
    0x65,0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,
    0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,
    0x5f,0x32,0x30,0x5f,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x3a,0x20,0x70,0x61,0x63,
    0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x30,0x5f,0x63,0x61,0x6d,0x65,
    0x72,0x61,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x63,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x32,0x30,0x5f,0x66,0x6f,0x67,0x5f,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,0x20,
    0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x34,0x2e,
    0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x32,0x30,0x5f,
    0x6f,0x72,0x74,0x68,0x6f,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x35,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x72,
    0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x75,0x76,0x3b,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,
    0x6e,0x74,0x5f,0x61,0x6f,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,
    0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,
    0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x75,0x76,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x20,
    0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,
    0x61,0x6f,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,
    0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,
    0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,
    0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x3a,0x20,0x54,
    0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x2c,0x20,0x5f,0x32,0x30,0x5f,0x6d,0x61,0x74,0x72,0x69,0x78,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,
    0x75,0x76,0x20,0x3d,0x20,0x75,0x76,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x20,0x3d,0x20,0x30,0x2e,
    0x33,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,
    0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x66,0x20,0x2b,0x20,0x28,0x28,0x31,0x2e,
    0x30,0x66,0x20,0x2d,0x20,0x75,0x76,0x2e,0x7a,0x29,0x20,0x2a,0x20,0x30,0x2e,0x36,
    0x39,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x30,0x37,0x39,0x30,0x37,0x31,0x30,0x34,
    0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,
    0x75,0x76,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x69,0x66,0x66,0x75,0x73,
    0x65,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,0x64,0x6f,
    0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x28,0x2d,0x30,0x2e,0x35,0x37,0x37,0x33,0x35,0x30,0x32,0x35,0x38,0x38,0x32,0x37,
    0x32,0x30,0x39,0x34,0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x66,0x2c,0x20,0x30,0x2e,
    0x35,0x37,0x37,0x33,0x35,0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,0x34,
    0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x66,0x2c,0x20,0x2d,0x30,0x2e,0x35,0x37,0x37,
    0x33,0x35,0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,0x34,0x37,0x32,0x36,
    0x35,0x36,0x32,0x35,0x66,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x32,0x30,0x5f,0x6f,0x72,0x74,0x68,0x6f,0x20,0x21,0x3d,0x20,0x69,
    0x6e,0x74,0x28,0x30,0x75,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,
    0x20,0x3d,0x20,0x30,0x2e,0x30,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x30,0x2e,
    0x30,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,
    0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x20,0x3d,0x20,0x70,0x6f,
    0x77,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,
    0x28,0x5f,0x32,0x30,0x5f,0x63,0x61,0x6d,0x65,0x72,0x61,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x79,0x7a,
    0x29,0x29,0x20,0x2f,0x20,0x5f,0x32,0x30,0x5f,0x66,0x6f,0x67,0x5f,0x64,0x69,0x73,
    0x74,0x61,0x6e,0x63,0x65,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,
    0x66,0x29,0x2c,0x20,0x34,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,
    0x28,0x61,0x74,0x61,0x6e,0x32,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,
    0x79,0x20,0x2d,0x20,0x5f,0x32,0x30,0x5f,0x63,0x61,0x6d,0x65,0x72,0x61,0x2e,0x79,
    0x2c,0x20,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,0x28,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x2e,0x78,0x7a,0x2c,0x20,0x5f,0x32,0x30,0x5f,0x63,0x61,0x6d,0x65,
    0x72,0x61,0x2e,0x78,0x7a,0x29,0x29,0x20,0x2b,0x20,0x31,0x2e,0x35,0x37,0x30,0x37,
    0x39,0x36,0x33,0x37,0x30,0x35,0x30,0x36,0x32,0x38,0x36,0x36,0x32,0x31,0x30,0x39,
    0x33,0x37,0x35,0x66,0x29,0x20,0x2a,0x20,0x30,0x2e,0x33,0x31,0x38,0x33,0x30,0x39,
    0x38,0x37,0x33,0x33,0x34,0x32,0x35,0x31,0x34,0x30,0x33,0x38,0x30,0x38,0x35,0x39,
    0x33,0x37,0x35,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,
    0x75,0x74,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x75,0x76,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,
    0x74,0x2e,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,
    0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x6d,0x65,
    0x6e,0x74,0x5f,0x75,0x76,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,
    0x5f,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,
    0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,
    0x6f,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,
    0x74,0x2e,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,
    0x70,0x75,0x74,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x3d,0x20,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,
    0x6f,0x72,0x20,0x3d,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,
    0x74,0x2e,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x66,
    0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    cbuffer block_ps_params : register(b0)
    {
        float _53_timer : packoffset(c0);
        float _53_daylight : packoffset(c0.y);
        int _53_ortho : packoffset(c0.z);
    };

    Texture2D<float4> block_color_tex : register(t0);
    SamplerState block_color_smp : register(s0);
    Texture2D<float4> block_sky_tex : register(t1);
    SamplerState block_sky_smp : register(s1);

    static float2 fragment_uv;
    static float diffuse;
    static float fragment_ao;
    static float fragment_light;
    static float fog_height;
    static float fog_factor;
    static float4 fragColor;

    struct SPIRV_Cross_Input
    {
        float2 fragment_uv : TEXCOORD0;
        float fragment_ao : TEXCOORD1;
        float fragment_light : TEXCOORD2;
        float fog_factor : TEXCOORD3;
        float fog_height : TEXCOORD4;
        float diffuse : TEXCOORD5;
    };

    struct SPIRV_Cross_Output
    {
        float4 fragColor : SV_Target0;
    };

    void frag_main()
    {
        float3 _29 = float3(block_color_tex.Sample(block_color_smp, fragment_uv).xyz);
        float3 color = _29;
        if (all(bool3(_29.x == float3(1.0f, 0.0f, 1.0f).x, _29.y == float3(1.0f, 0.0f, 1.0f).y, _29.z == float3(1.0f, 0.0f, 1.0f).z)))
        {
            discard;
        }
        bool _46 = all(bool3(color.x == 1.0f.xxx.x, color.y == 1.0f.xxx.y, color.z == 1.0f.xxx.z));
        bool _61;
        if (_46)
        {
            _61 = _53_ortho != int(0u);
        }
        else
        {
            _61 = _46;
        }
        if (_61)
        {
            discard;
        }
        float _68;
        if (_46)
        {
            _68 = 1.0f - (diffuse * 0.20000000298023223876953125f);
        }
        else
        {
            _68 = diffuse;
        }
        float df = _68;
        float _82;
        if (_46)
        {
            _82 = 1.0f - ((1.0f - fragment_ao) * 0.20000000298023223876953125f);
        }
        else
        {
            _82 = fragment_ao;
        }
        float _98 = df;
        float _101 = min(1.0f, _98 + fragment_light);
        df = _101;
        float3 _115 = ((min(1.0f, _53_daylight + fragment_light) * 0.300000011920928955078125f) + 0.20000000298023223876953125f).xxx;
        float3 _127 = color;
        float3 _156 = lerp(clamp((_127 * (_115 + (_115 * _101))) * min(1.0f, _82 + fragment_light), 0.0f.xxx, 1.0f.xxx), float3(block_sky_tex.Sample(block_sky_smp, float2(_53_timer, fog_height)).xyz), fog_factor.xxx);
        color = _156;
        fragColor = float4(_156, 1.0f);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        fragment_uv = stage_input.fragment_uv;
        diffuse = stage_input.diffuse;
        fragment_ao = stage_input.fragment_ao;
        fragment_light = stage_input.fragment_light;
        fog_height = stage_input.fog_height;
        fog_factor = stage_input.fog_factor;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.fragColor = fragColor;
        return stage_output;
    }
*/
static const uint8_t fs_source_hlsl5[2651] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x70,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,
    0x65,0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x35,0x33,0x5f,0x74,0x69,0x6d,0x65,0x72,0x20,0x3a,0x20,0x70,
    0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x33,0x5f,0x64,0x61,0x79,
    0x6c,0x69,0x67,0x68,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x30,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,
    0x74,0x20,0x5f,0x35,0x33,0x5f,0x6f,0x72,0x74,0x68,0x6f,0x20,0x3a,0x20,0x70,0x61,
    0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x2e,0x7a,0x29,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x3e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x5f,0x74,0x65,0x78,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,
    0x28,0x74,0x30,0x29,0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,
    0x74,0x65,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x73,
    0x6d,0x70,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x30,
    0x29,0x3b,0x0a,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x3e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x74,
    0x65,0x78,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x31,
    0x29,0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,
    0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x73,0x6d,0x70,0x20,0x3a,0x20,
    0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x31,0x29,0x3b,0x0a,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x72,0x61,
    0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x72,0x61,
    0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,
    0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,
    0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,
    0x74,0x5f,0x75,0x76,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,
    0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,
    0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x20,0x3a,0x20,
    0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x20,
    0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,
    0x74,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x34,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,
    0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x35,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,
    0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,
    0x6f,0x72,0x20,0x3a,0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x5f,0x32,0x39,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x74,0x65,0x78,0x2e,
    0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,
    0x5f,0x75,0x76,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x32,
    0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x61,0x6c,0x6c,0x28,0x62,
    0x6f,0x6f,0x6c,0x33,0x28,0x5f,0x32,0x39,0x2e,0x78,0x20,0x3d,0x3d,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,
    0x20,0x31,0x2e,0x30,0x66,0x29,0x2e,0x78,0x2c,0x20,0x5f,0x32,0x39,0x2e,0x79,0x20,
    0x3d,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,
    0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2e,0x79,0x2c,0x20,0x5f,
    0x32,0x39,0x2e,0x7a,0x20,0x3d,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x31,
    0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,
    0x2e,0x7a,0x29,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x34,0x36,0x20,
    0x3d,0x20,0x61,0x6c,0x6c,0x28,0x62,0x6f,0x6f,0x6c,0x33,0x28,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x78,0x20,0x3d,0x3d,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x2e,
    0x78,0x2c,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x79,0x20,0x3d,0x3d,0x20,0x31,0x2e,
    0x30,0x66,0x2e,0x78,0x78,0x78,0x2e,0x79,0x2c,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x2e,
    0x7a,0x20,0x3d,0x3d,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x2e,0x7a,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x36,0x31,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x36,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x31,0x20,
    0x3d,0x20,0x5f,0x35,0x33,0x5f,0x6f,0x72,0x74,0x68,0x6f,0x20,0x21,0x3d,0x20,0x69,
    0x6e,0x74,0x28,0x30,0x75,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x31,0x20,0x3d,0x20,0x5f,0x34,0x36,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x36,
    0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x38,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x36,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x38,0x20,0x3d,0x20,
    0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x28,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,
    0x2a,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,
    0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x66,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,
    0x36,0x38,0x20,0x3d,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x66,
    0x20,0x3d,0x20,0x5f,0x36,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x38,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x34,0x36,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x38,0x32,0x20,0x3d,0x20,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x28,
    0x28,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,
    0x5f,0x61,0x6f,0x29,0x20,0x2a,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,
    0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,
    0x31,0x32,0x35,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x38,0x32,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,
    0x6e,0x74,0x5f,0x61,0x6f,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x38,0x20,0x3d,0x20,0x64,0x66,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x31,0x20,
    0x3d,0x20,0x6d,0x69,0x6e,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x5f,0x39,0x38,0x20,
    0x2b,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x66,0x20,0x3d,0x20,0x5f,0x31,0x30,0x31,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x31,
    0x35,0x20,0x3d,0x20,0x28,0x28,0x6d,0x69,0x6e,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,
    0x5f,0x35,0x33,0x5f,0x64,0x61,0x79,0x6c,0x69,0x67,0x68,0x74,0x20,0x2b,0x20,0x66,
    0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x29,0x20,0x2a,
    0x20,0x30,0x2e,0x33,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,
    0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x66,0x29,0x20,0x2b,0x20,
    0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,
    0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x66,0x29,0x2e,0x78,
    0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,
    0x31,0x32,0x37,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x35,0x36,0x20,0x3d,0x20,0x6c,
    0x65,0x72,0x70,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,0x5f,0x31,0x32,0x37,0x20,
    0x2a,0x20,0x28,0x5f,0x31,0x31,0x35,0x20,0x2b,0x20,0x28,0x5f,0x31,0x31,0x35,0x20,
    0x2a,0x20,0x5f,0x31,0x30,0x31,0x29,0x29,0x29,0x20,0x2a,0x20,0x6d,0x69,0x6e,0x28,
    0x31,0x2e,0x30,0x66,0x2c,0x20,0x5f,0x38,0x32,0x20,0x2b,0x20,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x29,0x2c,0x20,0x30,0x2e,0x30,
    0x66,0x2e,0x78,0x78,0x78,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x29,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x73,
    0x6b,0x79,0x5f,0x74,0x65,0x78,0x2e,0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x62,0x6c,
    0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x28,0x5f,0x35,0x33,0x5f,0x74,0x69,0x6d,0x65,0x72,0x2c,0x20,0x66,
    0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,
    0x2c,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x2e,0x78,0x78,0x78,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,
    0x31,0x35,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x5f,0x31,0x35,0x36,
    0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,
    0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,
    0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,
    0x74,0x5f,0x75,0x76,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,
    0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x3d,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,
    0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,
    0x61,0x6f,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,
    0x2e,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x66,
    0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x66,0x6f,0x67,0x5f,
    0x68,0x65,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x67,0x5f,
    0x66,0x61,0x63,0x74,0x6f,0x72,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x2e,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,
    0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,
    0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct block_vs_params
    {
        float4x4 matrix;
        packed_float3 camera;
        float fog_distance;
        int ortho;
    };

    struct main0_out
    {
        float2 fragment_uv [[user(locn0)]];
        float fragment_ao [[user(locn1)]];
        float fragment_light [[user(locn2)]];
        float fog_factor [[user(locn3)]];
        float fog_height [[user(locn4)]];
        float diffuse [[user(locn5)]];
        float4 gl_Position [[position]];
    };

    struct main0_in
    {
        float4 position [[attribute(0)]];
        float3 normal [[attribute(1)]];
        float4 uv [[attribute(2)]];
    };

    vertex main0_out main0(main0_in in [[stage_in]], constant block_vs_params& _20 [[buffer(0)]])
    {
        main0_out out = {};
        out.gl_Position = _20.matrix * in.position;
        out.fragment_uv = in.uv.xy;
        out.fragment_ao = 0.300000011920928955078125 + ((1.0 - in.uv.z) * 0.699999988079071044921875);
        out.fragment_light = in.uv.w;
        out.diffuse = fast::max(0.0, dot(in.normal, float3(-0.57735025882720947265625, 0.57735025882720947265625, -0.57735025882720947265625)));
        if (_20.ortho != int(0u))
        {
            out.fog_factor = 0.0;
            out.fog_height = 0.0;
        }
        else
        {
            out.fog_factor = powr(fast::clamp(distance(float3(_20.camera), float3(in.position.xyz)) / _20.fog_distance, 0.0, 1.0), 4.0);
            out.fog_height = (precise::atan2(in.position.y - _20.camera[1u], distance(in.position.xz, float2(_20.camera[0], _20.camera[2]))) + 1.57079637050628662109375) * 0.3183098733425140380859375;
        }
        return out;
    }

*/
static const uint8_t vs_source_metal_macos[1554] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x62,
    0x6c,0x6f,0x63,0x6b,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6d,0x61,
    0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x63,0x6b,0x65,0x64,
    0x5f,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x63,0x61,0x6d,0x65,0x72,0x61,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x64,0x69,
    0x73,0x74,0x61,0x6e,0x63,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x6f,0x72,0x74,0x68,0x6f,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,
    0x74,0x5f,0x75,0x76,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,
    0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x20,0x5b,0x5b,0x75,0x73,
    0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x20,0x5b,0x5b,0x75,0x73,
    0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,
    0x74,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x34,0x29,0x5d,
    0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,
    0x35,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,
    0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x75,0x76,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,
    0x62,0x75,0x74,0x65,0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,
    0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,
    0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,
    0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x32,0x30,0x20,0x5b,0x5b,
    0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,
    0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x32,0x30,
    0x2e,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,
    0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x20,0x3d,0x20,0x69,0x6e,0x2e,
    0x75,0x76,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,
    0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x20,0x3d,0x20,0x30,0x2e,0x33,
    0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,
    0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x20,0x2b,0x20,0x28,0x28,0x31,0x2e,0x30,0x20,
    0x2d,0x20,0x69,0x6e,0x2e,0x75,0x76,0x2e,0x7a,0x29,0x20,0x2a,0x20,0x30,0x2e,0x36,
    0x39,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x30,0x37,0x39,0x30,0x37,0x31,0x30,0x34,
    0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,
    0x74,0x2e,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x20,0x3d,0x20,0x69,0x6e,0x2e,0x75,0x76,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x3d,0x20,0x66,0x61,
    0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x30,0x2e,0x30,0x2c,0x20,0x64,0x6f,0x74,
    0x28,0x69,0x6e,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x28,0x2d,0x30,0x2e,0x35,0x37,0x37,0x33,0x35,0x30,0x32,0x35,0x38,0x38,
    0x32,0x37,0x32,0x30,0x39,0x34,0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,
    0x2e,0x35,0x37,0x37,0x33,0x35,0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,
    0x34,0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x35,0x37,0x37,
    0x33,0x35,0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,0x34,0x37,0x32,0x36,
    0x35,0x36,0x32,0x35,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x32,0x30,0x2e,0x6f,0x72,0x74,0x68,0x6f,0x20,0x21,0x3d,0x20,0x69,0x6e,
    0x74,0x28,0x30,0x75,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,
    0x74,0x6f,0x72,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,
    0x74,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x6f,0x67,0x5f,0x66,0x61,
    0x63,0x74,0x6f,0x72,0x20,0x3d,0x20,0x70,0x6f,0x77,0x72,0x28,0x66,0x61,0x73,0x74,
    0x3a,0x3a,0x63,0x6c,0x61,0x6d,0x70,0x28,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x32,0x30,0x2e,0x63,0x61,0x6d,0x65,
    0x72,0x61,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x69,0x6e,0x2e,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x79,0x7a,0x29,0x29,0x20,0x2f,0x20,
    0x5f,0x32,0x30,0x2e,0x66,0x6f,0x67,0x5f,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x34,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,
    0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x28,0x70,0x72,0x65,
    0x63,0x69,0x73,0x65,0x3a,0x3a,0x61,0x74,0x61,0x6e,0x32,0x28,0x69,0x6e,0x2e,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x79,0x20,0x2d,0x20,0x5f,0x32,0x30,0x2e,
    0x63,0x61,0x6d,0x65,0x72,0x61,0x5b,0x31,0x75,0x5d,0x2c,0x20,0x64,0x69,0x73,0x74,
    0x61,0x6e,0x63,0x65,0x28,0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2e,0x78,0x7a,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x32,0x30,0x2e,
    0x63,0x61,0x6d,0x65,0x72,0x61,0x5b,0x30,0x5d,0x2c,0x20,0x5f,0x32,0x30,0x2e,0x63,
    0x61,0x6d,0x65,0x72,0x61,0x5b,0x32,0x5d,0x29,0x29,0x29,0x20,0x2b,0x20,0x31,0x2e,
    0x35,0x37,0x30,0x37,0x39,0x36,0x33,0x37,0x30,0x35,0x30,0x36,0x32,0x38,0x36,0x36,
    0x32,0x31,0x30,0x39,0x33,0x37,0x35,0x29,0x20,0x2a,0x20,0x30,0x2e,0x33,0x31,0x38,
    0x33,0x30,0x39,0x38,0x37,0x33,0x33,0x34,0x32,0x35,0x31,0x34,0x30,0x33,0x38,0x30,
    0x38,0x35,0x39,0x33,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct block_ps_params
    {
        float timer;
        float daylight;
        int ortho;
    };

    struct main0_out
    {
        float4 fragColor [[color(0)]];
    };

    struct main0_in
    {
        float2 fragment_uv [[user(locn0)]];
        float fragment_ao [[user(locn1)]];
        float fragment_light [[user(locn2)]];
        float fog_factor [[user(locn3)]];
        float fog_height [[user(locn4)]];
        float diffuse [[user(locn5)]];
    };

    fragment main0_out main0(main0_in in [[stage_in]], constant block_ps_params& _53 [[buffer(0)]], texture2d<float> block_color_tex [[texture(0)]], texture2d<float> block_sky_tex [[texture(1)]], sampler block_color_smp [[sampler(0)]], sampler block_sky_smp [[sampler(1)]])
    {
        main0_out out = {};
        float3 _29 = float3(block_color_tex.sample(block_color_smp, in.fragment_uv).xyz);
        float3 color = _29;
        if (all(_29 == float3(1.0, 0.0, 1.0)))
        {
            discard_fragment();
        }
        bool _46 = all(color == float3(1.0));
        bool _61;
        if (_46)
        {
            _61 = _53.ortho != int(0u);
        }
        else
        {
            _61 = _46;
        }
        if (_61)
        {
            discard_fragment();
        }
        float _68;
        if (_46)
        {
            _68 = 1.0 - (in.diffuse * 0.20000000298023223876953125);
        }
        else
        {
            _68 = in.diffuse;
        }
        float df = _68;
        float _82;
        if (_46)
        {
            _82 = 1.0 - ((1.0 - in.fragment_ao) * 0.20000000298023223876953125);
        }
        else
        {
            _82 = in.fragment_ao;
        }
        float _98 = df;
        float _101 = fast::min(1.0, _98 + in.fragment_light);
        df = _101;
        float3 _115 = float3((fast::min(1.0, _53.daylight + in.fragment_light) * 0.300000011920928955078125) + 0.20000000298023223876953125);
        float3 _127 = color;
        float3 _156 = mix(fast::clamp((_127 * (_115 + (_115 * _101))) * fast::min(1.0, _82 + in.fragment_light), float3(0.0), float3(1.0)), float3(block_sky_tex.sample(block_sky_smp, float2(_53.timer, in.fog_height)).xyz), float3(in.fog_factor));
        color = _156;
        out.fragColor = float4(_156, 1.0);
        return out;
    }

*/
static const uint8_t fs_source_metal_macos[2080] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x62,
    0x6c,0x6f,0x63,0x6b,0x5f,0x70,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x69,0x6d,0x65,0x72,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x61,0x79,0x6c,
    0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6f,0x72,
    0x74,0x68,0x6f,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,
    0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x20,0x5b,0x5b,0x75,0x73,
    0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,
    0x61,0x6f,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x72,
    0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x20,0x5b,0x5b,0x75,
    0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,
    0x6f,0x72,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x33,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,
    0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,
    0x6c,0x6f,0x63,0x6e,0x34,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x5b,0x5b,0x75,0x73,
    0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x35,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x62,0x6c,0x6f,
    0x63,0x6b,0x5f,0x70,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x35,
    0x33,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,
    0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,
    0x3e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x74,0x65,
    0x78,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,0x5d,
    0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,0x61,
    0x74,0x3e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x74,0x65,0x78,
    0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x31,0x29,0x5d,0x5d,0x2c,
    0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x5f,0x73,0x6d,0x70,0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x73,0x6d,0x70,0x20,0x5b,
    0x5b,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x28,0x31,0x29,0x5d,0x5d,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,
    0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x5f,0x32,0x39,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x28,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x74,0x65,0x78,
    0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x5f,0x32,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x61,
    0x6c,0x6c,0x28,0x5f,0x32,0x39,0x20,0x3d,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x5f,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,
    0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,
    0x6f,0x6c,0x20,0x5f,0x34,0x36,0x20,0x3d,0x20,0x61,0x6c,0x6c,0x28,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x31,0x2e,0x30,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x36,0x31,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x36,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x31,
    0x20,0x3d,0x20,0x5f,0x35,0x33,0x2e,0x6f,0x72,0x74,0x68,0x6f,0x20,0x21,0x3d,0x20,
    0x69,0x6e,0x74,0x28,0x30,0x75,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x31,0x20,0x3d,0x20,0x5f,0x34,0x36,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x36,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x5f,0x66,0x72,0x61,0x67,0x6d,0x65,
    0x6e,0x74,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x34,0x36,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x38,0x20,0x3d,0x20,0x31,0x2e,0x30,0x20,
    0x2d,0x20,0x28,0x69,0x6e,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x2a,0x20,
    0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,
    0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x38,0x20,
    0x3d,0x20,0x69,0x6e,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x66,
    0x20,0x3d,0x20,0x5f,0x36,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x38,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x34,0x36,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x38,0x32,0x20,0x3d,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x28,
    0x31,0x2e,0x30,0x20,0x2d,0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,
    0x74,0x5f,0x61,0x6f,0x29,0x20,0x2a,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,
    0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,
    0x33,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x38,0x32,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,
    0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x38,0x20,0x3d,0x20,
    0x64,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,
    0x30,0x31,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,0x28,0x31,
    0x2e,0x30,0x2c,0x20,0x5f,0x39,0x38,0x20,0x2b,0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,
    0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x64,0x66,0x20,0x3d,0x20,0x5f,0x31,0x30,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x31,0x35,0x20,0x3d,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x28,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,
    0x28,0x31,0x2e,0x30,0x2c,0x20,0x5f,0x35,0x33,0x2e,0x64,0x61,0x79,0x6c,0x69,0x67,
    0x68,0x74,0x20,0x2b,0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x29,0x20,0x2a,0x20,0x30,0x2e,0x33,0x30,0x30,0x30,
    0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,
    0x38,0x31,0x32,0x35,0x29,0x20,0x2b,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,
    0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,
    0x33,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x5f,0x31,0x32,0x37,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x35,0x36,0x20,
    0x3d,0x20,0x6d,0x69,0x78,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,0x63,0x6c,0x61,0x6d,
    0x70,0x28,0x28,0x5f,0x31,0x32,0x37,0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,0x35,0x20,
    0x2b,0x20,0x28,0x5f,0x31,0x31,0x35,0x20,0x2a,0x20,0x5f,0x31,0x30,0x31,0x29,0x29,
    0x29,0x20,0x2a,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,0x28,0x31,0x2e,
    0x30,0x2c,0x20,0x5f,0x38,0x32,0x20,0x2b,0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x29,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x28,0x31,0x2e,0x30,0x29,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x62,
    0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x74,0x65,0x78,0x2e,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x28,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x73,0x6d,
    0x70,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x35,0x33,0x2e,0x74,0x69,
    0x6d,0x65,0x72,0x2c,0x20,0x69,0x6e,0x2e,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,
    0x68,0x74,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x69,0x6e,0x2e,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,
    0x31,0x35,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,
    0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,
    0x5f,0x31,0x35,0x36,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
/*
    diagnostic(off, derivative_uniformity);

    struct block_vs_params {
      /_ @offset(0) _/
      matrix : mat4x4f,
      /_ @offset(64) _/
      camera : vec3f,
      /_ @offset(76) _/
      fog_distance : f32,
      /_ @offset(80) _/
      ortho : i32,
    }

    @binding(0) @group(0) var<uniform> x_20 : block_vs_params;

    var<private> position_1 : vec4f;

    var<private> fragment_uv : vec2f;

    var<private> uv : vec4f;

    var<private> fragment_ao : f32;

    var<private> fragment_light : f32;

    var<private> diffuse : f32;

    var<private> normal : vec3f;

    var<private> fog_factor : f32;

    var<private> fog_height : f32;

    var<private> gl_Position : vec4f;

    fn main_1() {
      var camera_distance : f32;
      var dy : f32;
      var dx : f32;
      gl_Position = (x_20.matrix * position_1);
      fragment_uv = uv.xy;
      fragment_ao = (0.30000001192092895508f + ((1.0f - uv.z) * 0.69999998807907104492f));
      fragment_light = uv.w;
      diffuse = max(0.0f, dot(normal, vec3f(-0.57735025882720947266f, 0.57735025882720947266f, -0.57735025882720947266f)));
      if ((x_20.ortho != bitcast<i32>(0u))) {
        fog_factor = 0.0f;
        fog_height = 0.0f;
      } else {
        camera_distance = distance(x_20.camera, vec3f(position_1.x, position_1.y, position_1.z));
        fog_factor = pow(clamp((camera_distance / x_20.fog_distance), 0.0f, 1.0f), 4.0f);
        dy = (position_1.y - x_20.camera.y);
        dx = distance(position_1.xz, x_20.camera.xz);
        fog_height = ((atan2(dy, dx) + 1.57079637050628662109f) / 3.14159274101257324219f);
      }
      return;
    }

    struct main_out {
      @builtin(position)
      gl_Position : vec4f,
      @location(0)
      fragment_uv_1 : vec2f,
      @location(1)
      fragment_ao_1 : f32,
      @location(2)
      fragment_light_1 : f32,
      @location(5)
      diffuse_1 : f32,
      @location(3)
      fog_factor_1 : f32,
      @location(4)
      fog_height_1 : f32,
    }

    @vertex
    fn main(@location(0) position_1_param : vec4f, @location(2) uv_param : vec4f, @location(1) normal_param : vec3f) -> main_out {
      position_1 = position_1_param;
      uv = uv_param;
      normal = normal_param;
      main_1();
      return main_out(gl_Position, fragment_uv, fragment_ao, fragment_light, diffuse, fog_factor, fog_height);
    }
*/
static const uint8_t vs_source_wgsl[2078] = {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,
    0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,
    0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x3a,0x20,
    0x6d,0x61,0x74,0x34,0x78,0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x36,0x34,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x63,
    0x61,0x6d,0x65,0x72,0x61,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x0a,0x20,
    0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x37,0x36,0x29,0x20,
    0x2a,0x2f,0x0a,0x20,0x20,0x66,0x6f,0x67,0x5f,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,
    0x65,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x38,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x6f,
    0x72,0x74,0x68,0x6f,0x20,0x3a,0x20,0x69,0x33,0x32,0x2c,0x0a,0x7d,0x0a,0x0a,0x40,
    0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x30,0x29,0x20,0x40,0x67,0x72,0x6f,0x75,
    0x70,0x28,0x30,0x29,0x20,0x76,0x61,0x72,0x3c,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x3e,0x20,0x78,0x5f,0x32,0x30,0x20,0x3a,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,
    0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,
    0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,
    0x6e,0x74,0x5f,0x75,0x76,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x3b,0x0a,0x0a,
    0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x75,0x76,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,
    0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,
    0x61,0x6f,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,
    0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x0a,0x76,
    0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,
    0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,
    0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,
    0x72,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,
    0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,
    0x74,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,
    0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x66,0x6e,0x20,
    0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,0x20,0x20,0x76,0x61,0x72,
    0x20,0x63,0x61,0x6d,0x65,0x72,0x61,0x5f,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,
    0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x64,0x79,
    0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x64,0x78,
    0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x78,0x5f,0x32,0x30,0x2e,0x6d,0x61,
    0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,
    0x31,0x29,0x3b,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,
    0x76,0x20,0x3d,0x20,0x75,0x76,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x66,0x72,0x61,
    0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x20,0x3d,0x20,0x28,0x30,0x2e,0x33,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,
    0x30,0x38,0x66,0x20,0x2b,0x20,0x28,0x28,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x75,
    0x76,0x2e,0x7a,0x29,0x20,0x2a,0x20,0x30,0x2e,0x36,0x39,0x39,0x39,0x39,0x39,0x39,
    0x38,0x38,0x30,0x37,0x39,0x30,0x37,0x31,0x30,0x34,0x34,0x39,0x32,0x66,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x20,0x3d,0x20,0x75,0x76,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x30,0x2e,0x30,0x66,0x2c,
    0x20,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x66,0x28,0x2d,0x30,0x2e,0x35,0x37,0x37,0x33,0x35,0x30,0x32,0x35,0x38,0x38,
    0x32,0x37,0x32,0x30,0x39,0x34,0x37,0x32,0x36,0x36,0x66,0x2c,0x20,0x30,0x2e,0x35,
    0x37,0x37,0x33,0x35,0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,0x34,0x37,
    0x32,0x36,0x36,0x66,0x2c,0x20,0x2d,0x30,0x2e,0x35,0x37,0x37,0x33,0x35,0x30,0x32,
    0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,0x34,0x37,0x32,0x36,0x36,0x66,0x29,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x78,0x5f,0x32,0x30,0x2e,0x6f,
    0x72,0x74,0x68,0x6f,0x20,0x21,0x3d,0x20,0x62,0x69,0x74,0x63,0x61,0x73,0x74,0x3c,
    0x69,0x33,0x32,0x3e,0x28,0x30,0x75,0x29,0x29,0x29,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x20,0x3d,0x20,0x30,0x2e,
    0x30,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,
    0x68,0x74,0x20,0x3d,0x20,0x30,0x2e,0x30,0x66,0x3b,0x0a,0x20,0x20,0x7d,0x20,0x65,
    0x6c,0x73,0x65,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x63,0x61,0x6d,0x65,0x72,0x61,
    0x5f,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,0x20,0x3d,0x20,0x64,0x69,0x73,0x74,
    0x61,0x6e,0x63,0x65,0x28,0x78,0x5f,0x32,0x30,0x2e,0x63,0x61,0x6d,0x65,0x72,0x61,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x5f,0x31,0x2e,0x78,0x2c,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,0x31,
    0x2e,0x79,0x2c,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,0x31,0x2e,0x7a,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,
    0x6f,0x72,0x20,0x3d,0x20,0x70,0x6f,0x77,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,
    0x63,0x61,0x6d,0x65,0x72,0x61,0x5f,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,0x20,
    0x2f,0x20,0x78,0x5f,0x32,0x30,0x2e,0x66,0x6f,0x67,0x5f,0x64,0x69,0x73,0x74,0x61,
    0x6e,0x63,0x65,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,
    0x29,0x2c,0x20,0x34,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x79,
    0x20,0x3d,0x20,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,0x31,0x2e,0x79,
    0x20,0x2d,0x20,0x78,0x5f,0x32,0x30,0x2e,0x63,0x61,0x6d,0x65,0x72,0x61,0x2e,0x79,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x78,0x20,0x3d,0x20,0x64,0x69,0x73,0x74,
    0x61,0x6e,0x63,0x65,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,0x31,0x2e,
    0x78,0x7a,0x2c,0x20,0x78,0x5f,0x32,0x30,0x2e,0x63,0x61,0x6d,0x65,0x72,0x61,0x2e,
    0x78,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,
    0x67,0x68,0x74,0x20,0x3d,0x20,0x28,0x28,0x61,0x74,0x61,0x6e,0x32,0x28,0x64,0x79,
    0x2c,0x20,0x64,0x78,0x29,0x20,0x2b,0x20,0x31,0x2e,0x35,0x37,0x30,0x37,0x39,0x36,
    0x33,0x37,0x30,0x35,0x30,0x36,0x32,0x38,0x36,0x36,0x32,0x31,0x30,0x39,0x66,0x29,
    0x20,0x2f,0x20,0x33,0x2e,0x31,0x34,0x31,0x35,0x39,0x32,0x37,0x34,0x31,0x30,0x31,
    0x32,0x35,0x37,0x33,0x32,0x34,0x32,0x31,0x39,0x66,0x29,0x3b,0x0a,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,
    0x20,0x20,0x40,0x62,0x75,0x69,0x6c,0x74,0x69,0x6e,0x28,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x29,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x40,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x0a,0x20,0x20,0x66,0x72,0x61,
    0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x32,0x66,0x2c,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,
    0x31,0x29,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,
    0x5f,0x31,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x28,0x32,0x29,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,0x6d,
    0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x31,0x20,0x3a,0x20,0x66,0x33,
    0x32,0x2c,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x35,
    0x29,0x0a,0x20,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x31,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x2c,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x28,0x33,0x29,0x0a,0x20,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,
    0x5f,0x31,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x28,0x34,0x29,0x0a,0x20,0x20,0x66,0x6f,0x67,0x5f,0x68,
    0x65,0x69,0x67,0x68,0x74,0x5f,0x31,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x0a,0x7d,
    0x0a,0x0a,0x40,0x76,0x65,0x72,0x74,0x65,0x78,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x20,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,0x31,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x28,0x32,0x29,0x20,0x75,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x28,0x31,0x29,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x29,0x20,0x2d,0x3e,0x20,0x6d,0x61,
    0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x5f,0x31,0x20,0x3d,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x5f,0x31,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x75,0x76,0x20,0x3d,
    0x20,0x75,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x3b,0x0a,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,
    0x74,0x28,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x66,
    0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x2c,0x20,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x2c,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,
    0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x2c,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,
    0x2c,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x2c,0x20,0x66,0x6f,
    0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x29,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    diagnostic(off, derivative_uniformity);

    struct block_ps_params {
      /_ @offset(0) _/
      timer : f32,
      /_ @offset(4) _/
      daylight : f32,
      /_ @offset(8) _/
      ortho : i32,
    }

    @binding(64) @group(1) var block_color_tex : texture_2d<f32>;

    @binding(80) @group(1) var block_color_smp : sampler;

    var<private> fragment_uv : vec2f;

    @binding(8) @group(0) var<uniform> x_53 : block_ps_params;

    var<private> diffuse : f32;

    var<private> fragment_ao : f32;

    var<private> fragment_light : f32;

    @binding(65) @group(1) var block_sky_tex : texture_2d<f32>;

    @binding(81) @group(1) var block_sky_smp : sampler;

    var<private> fog_height : f32;

    var<private> fog_factor : f32;

    var<private> fragColor : vec4f;

    const x_44 = vec3f(1.0f);

    fn main_1() {
      var color : vec3f;
      var cloud : bool;
      var df : f32;
      var x_68 : f32;
      var ao : f32;
      var x_82 : f32;
      var value : f32;
      var light_color : vec3f;
      var ambient : vec3f;
      var light : vec3f;
      var sky_color : vec3f;
      var x_60 : bool;
      var x_61 : bool;
      let x_23 = fragment_uv;
      let x_25 = textureSample(block_color_tex, block_color_smp, x_23);
      color = vec3f(x_25.x, x_25.y, x_25.z);
      if (all((color == vec3f(1.0f, 0.0f, 1.0f)))) {
        discard;
      }
      cloud = all((color == x_44));
      let x_47 = cloud;
      x_61 = cloud;
      if (x_47) {
        x_60 = (x_53.ortho != bitcast<i32>(0u));
        x_61 = x_60;
      }
      if (x_61) {
        discard;
      }
      if (cloud) {
        x_68 = (1.0f - (diffuse * 0.20000000298023223877f));
      } else {
        x_68 = diffuse;
      }
      df = x_68;
      if (cloud) {
        x_82 = (1.0f - ((1.0f - fragment_ao) * 0.20000000298023223877f));
      } else {
        x_82 = fragment_ao;
      }
      ao = x_82;
      ao = min(1.0f, (ao + fragment_light));
      df = min(1.0f, (df + fragment_light));
      value = min(1.0f, (x_53.daylight + fragment_light));
      light_color = vec3f(((value * 0.30000001192092895508f) + 0.20000000298023223877f));
      ambient = vec3f(((value * 0.30000001192092895508f) + 0.20000000298023223877f));
      light = (ambient + (light_color * df));
      color = clamp(((color * light) * ao), vec3f(), x_44);
      let x_142 = x_53.timer;
      let x_144 = fog_height;
      let x_146 = textureSample(block_sky_tex, block_sky_smp, vec2f(x_142, x_144));
      sky_color = vec3f(x_146.x, x_146.y, x_146.z);
      color = mix(color, sky_color, vec3f(fog_factor));
      fragColor = vec4f(color.x, color.y, color.z, 1.0f);
      return;
    }

    struct main_out {
      @location(0)
      fragColor_1 : vec4f,
    }

    @fragment
    fn main(@location(0) fragment_uv_param : vec2f, @location(5) diffuse_param : f32, @location(1) fragment_ao_param : f32, @location(2) fragment_light_param : f32, @location(4) fog_height_param : f32, @location(3) fog_factor_param : f32) -> main_out {
      fragment_uv = fragment_uv_param;
      diffuse = diffuse_param;
      fragment_ao = fragment_ao_param;
      fragment_light = fragment_light_param;
      fog_height = fog_height_param;
      fog_factor = fog_factor_param;
      main_1();
      return main_out(fragColor);
    }
*/
static const uint8_t fs_source_wgsl[2905] = {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x70,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,
    0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,
    0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x74,0x69,0x6d,0x65,0x72,0x20,0x3a,0x20,0x66,
    0x33,0x32,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x34,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x64,0x61,0x79,0x6c,0x69,0x67,0x68,
    0x74,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x38,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x6f,0x72,
    0x74,0x68,0x6f,0x20,0x3a,0x20,0x69,0x33,0x32,0x2c,0x0a,0x7d,0x0a,0x0a,0x40,0x62,
    0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x36,0x34,0x29,0x20,0x40,0x67,0x72,0x6f,0x75,
    0x70,0x28,0x31,0x29,0x20,0x76,0x61,0x72,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x5f,0x74,0x65,0x78,0x20,0x3a,0x20,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x32,0x64,0x3c,0x66,0x33,0x32,0x3e,0x3b,0x0a,0x0a,0x40,0x62,0x69,
    0x6e,0x64,0x69,0x6e,0x67,0x28,0x38,0x30,0x29,0x20,0x40,0x67,0x72,0x6f,0x75,0x70,
    0x28,0x31,0x29,0x20,0x76,0x61,0x72,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x5f,0x73,0x6d,0x70,0x20,0x3a,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,
    0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x32,0x66,0x3b,0x0a,0x0a,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,
    0x38,0x29,0x20,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x30,0x29,0x20,0x76,0x61,0x72,
    0x3c,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x3e,0x20,0x78,0x5f,0x35,0x33,0x20,0x3a,
    0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x70,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,
    0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x0a,
    0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x72,0x61,
    0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,
    0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x72,
    0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x20,0x3a,0x20,0x66,
    0x33,0x32,0x3b,0x0a,0x0a,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x36,0x35,
    0x29,0x20,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x31,0x29,0x20,0x76,0x61,0x72,0x20,
    0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x74,0x65,0x78,0x20,0x3a,0x20,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x32,0x64,0x3c,0x66,0x33,0x32,0x3e,0x3b,
    0x0a,0x0a,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x38,0x31,0x29,0x20,0x40,
    0x67,0x72,0x6f,0x75,0x70,0x28,0x31,0x29,0x20,0x76,0x61,0x72,0x20,0x62,0x6c,0x6f,
    0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,0x73,0x6d,0x70,0x20,0x3a,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,
    0x74,0x65,0x3e,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x3a,
    0x20,0x66,0x33,0x32,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,
    0x74,0x65,0x3e,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x20,0x3a,
    0x20,0x66,0x33,0x32,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,
    0x74,0x65,0x3e,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x63,0x6f,0x6e,0x73,0x74,0x20,0x78,0x5f,
    0x34,0x34,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x31,0x2e,0x30,0x66,0x29,
    0x3b,0x0a,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,
    0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x6c,0x6f,0x75,
    0x64,0x20,0x3a,0x20,0x62,0x6f,0x6f,0x6c,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,
    0x64,0x66,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,
    0x78,0x5f,0x36,0x38,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,
    0x72,0x20,0x61,0x6f,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,
    0x72,0x20,0x78,0x5f,0x38,0x32,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,
    0x76,0x61,0x72,0x20,0x76,0x61,0x6c,0x75,0x65,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,
    0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,
    0x72,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,
    0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x6c,0x69,0x67,0x68,0x74,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x73,0x6b,
    0x79,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,
    0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x78,0x5f,0x36,0x30,0x20,0x3a,0x20,0x62,0x6f,
    0x6f,0x6c,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x78,0x5f,0x36,0x31,0x20,0x3a,
    0x20,0x62,0x6f,0x6f,0x6c,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,
    0x33,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x35,0x20,0x3d,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x62,0x6c,0x6f,0x63,
    0x6b,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x74,0x65,0x78,0x2c,0x20,0x62,0x6c,0x6f,
    0x63,0x6b,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x78,0x5f,
    0x32,0x33,0x29,0x3b,0x0a,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x33,0x66,0x28,0x78,0x5f,0x32,0x35,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x32,
    0x35,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x32,0x35,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,
    0x69,0x66,0x20,0x28,0x61,0x6c,0x6c,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x3d,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,
    0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x29,0x29,0x29,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x63,0x6c,0x6f,0x75,0x64,0x20,0x3d,0x20,0x61,0x6c,0x6c,0x28,0x28,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x3d,0x20,0x78,0x5f,0x34,0x34,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x34,0x37,0x20,0x3d,0x20,0x63,0x6c,0x6f,
    0x75,0x64,0x3b,0x0a,0x20,0x20,0x78,0x5f,0x36,0x31,0x20,0x3d,0x20,0x63,0x6c,0x6f,
    0x75,0x64,0x3b,0x0a,0x20,0x20,0x69,0x66,0x20,0x28,0x78,0x5f,0x34,0x37,0x29,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x78,0x5f,0x36,0x30,0x20,0x3d,0x20,0x28,0x78,0x5f,
    0x35,0x33,0x2e,0x6f,0x72,0x74,0x68,0x6f,0x20,0x21,0x3d,0x20,0x62,0x69,0x74,0x63,
    0x61,0x73,0x74,0x3c,0x69,0x33,0x32,0x3e,0x28,0x30,0x75,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x78,0x5f,0x36,0x31,0x20,0x3d,0x20,0x78,0x5f,0x36,0x30,0x3b,0x0a,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x69,0x66,0x20,0x28,0x78,0x5f,0x36,0x31,0x29,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x69,0x66,0x20,0x28,0x63,0x6c,0x6f,0x75,0x64,0x29,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x78,0x5f,0x36,0x38,0x20,0x3d,0x20,0x28,0x31,0x2e,
    0x30,0x66,0x20,0x2d,0x20,0x28,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x2a,0x20,
    0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,
    0x32,0x32,0x33,0x38,0x37,0x37,0x66,0x29,0x29,0x3b,0x0a,0x20,0x20,0x7d,0x20,0x65,
    0x6c,0x73,0x65,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x78,0x5f,0x36,0x38,0x20,0x3d,
    0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x64,0x66,0x20,0x3d,0x20,0x78,0x5f,0x36,0x38,0x3b,0x0a,0x20,0x20,0x69,0x66,0x20,
    0x28,0x63,0x6c,0x6f,0x75,0x64,0x29,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x78,0x5f,
    0x38,0x32,0x20,0x3d,0x20,0x28,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x28,0x28,0x31,
    0x2e,0x30,0x66,0x20,0x2d,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,
    0x6f,0x29,0x20,0x2a,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,
    0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x37,0x66,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x7d,0x20,0x65,0x6c,0x73,0x65,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x78,
    0x5f,0x38,0x32,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,
    0x6f,0x3b,0x0a,0x20,0x20,0x7d,0x0a,0x20,0x20,0x61,0x6f,0x20,0x3d,0x20,0x78,0x5f,
    0x38,0x32,0x3b,0x0a,0x20,0x20,0x61,0x6f,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x31,
    0x2e,0x30,0x66,0x2c,0x20,0x28,0x61,0x6f,0x20,0x2b,0x20,0x66,0x72,0x61,0x67,0x6d,
    0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x29,0x29,0x3b,0x0a,0x20,0x20,0x64,
    0x66,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x28,0x64,
    0x66,0x20,0x2b,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x29,0x29,0x3b,0x0a,0x20,0x20,0x76,0x61,0x6c,0x75,0x65,0x20,0x3d,0x20,
    0x6d,0x69,0x6e,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x28,0x78,0x5f,0x35,0x33,0x2e,
    0x64,0x61,0x79,0x6c,0x69,0x67,0x68,0x74,0x20,0x2b,0x20,0x66,0x72,0x61,0x67,0x6d,
    0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x33,0x66,0x28,0x28,0x28,0x76,0x61,0x6c,0x75,0x65,0x20,0x2a,0x20,0x30,0x2e,0x33,
    0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,
    0x35,0x30,0x38,0x66,0x29,0x20,0x2b,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,
    0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x37,0x66,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x33,0x66,0x28,0x28,0x28,0x76,0x61,0x6c,0x75,0x65,0x20,0x2a,0x20,0x30,
    0x2e,0x33,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,
    0x39,0x35,0x35,0x30,0x38,0x66,0x29,0x20,0x2b,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,
    0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x37,
    0x66,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x28,
    0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x20,0x2b,0x20,0x28,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x64,0x66,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,
    0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x6c,0x69,0x67,0x68,0x74,0x29,0x20,
    0x2a,0x20,0x61,0x6f,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x29,0x2c,0x20,
    0x78,0x5f,0x34,0x34,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,
    0x34,0x32,0x20,0x3d,0x20,0x78,0x5f,0x35,0x33,0x2e,0x74,0x69,0x6d,0x65,0x72,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x34,0x34,0x20,0x3d,0x20,0x66,
    0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x31,0x34,0x36,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,
    0x5f,0x74,0x65,0x78,0x2c,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x5f,0x73,0x6b,0x79,0x5f,
    0x73,0x6d,0x70,0x2c,0x20,0x76,0x65,0x63,0x32,0x66,0x28,0x78,0x5f,0x31,0x34,0x32,
    0x2c,0x20,0x78,0x5f,0x31,0x34,0x34,0x29,0x29,0x3b,0x0a,0x20,0x20,0x73,0x6b,0x79,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x78,
    0x5f,0x31,0x34,0x36,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x31,0x34,0x36,0x2e,0x79,0x2c,
    0x20,0x78,0x5f,0x31,0x34,0x36,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,
    0x73,0x6b,0x79,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,
    0x28,0x66,0x6f,0x67,0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x34,0x66,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x2c,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x79,0x2c,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x7a,0x2c,0x20,0x31,0x2e,
    0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,
    0x74,0x20,0x7b,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,
    0x30,0x29,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x5f,0x31,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,0x40,0x66,0x72,
    0x61,0x67,0x6d,0x65,0x6e,0x74,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x28,0x40,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x20,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x32,0x66,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x28,0x35,0x29,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x28,0x31,0x29,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,
    0x6f,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x20,0x40,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x32,0x29,0x20,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x28,0x34,0x29,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x20,0x40,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x33,0x29,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,
    0x63,0x74,0x6f,0x72,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x66,0x33,0x32,
    0x29,0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,
    0x20,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x20,0x3d,0x20,
    0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x75,0x76,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x3b,0x0a,0x20,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x3d,0x20,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,
    0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x20,0x3d,0x20,0x66,0x72,
    0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x61,0x6f,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,
    0x0a,0x20,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,
    0x74,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x66,0x6f,0x67,0x5f,
    0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x66,0x6f,0x67,0x5f,0x68,0x65,0x69,
    0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x66,0x6f,0x67,
    0x5f,0x66,0x61,0x63,0x74,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6f,0x67,0x5f,0x66,0x61,
    0x63,0x74,0x6f,0x72,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6d,0x61,
    0x69,0x6e,0x5f,0x31,0x28,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x28,0x66,0x72,0x61,0x67,0x43,0x6f,
    0x6c,0x6f,0x72,0x29,0x3b,0x0a,0x7d,0x0a,0x00,
};
static inline const sg_shader_desc* block_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_glsl410;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_source_glsl410;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].glsl_name = "position";
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].glsl_name = "normal";
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].glsl_name = "uv";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 96;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_MAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "_20.matrix";
            desc.uniform_blocks[0].glsl_uniforms[1].type = SG_UNIFORMTYPE_FLOAT3;
            desc.uniform_blocks[0].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[1].glsl_name = "_20.camera";
            desc.uniform_blocks[0].glsl_uniforms[2].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[2].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[2].glsl_name = "_20.fog_distance";
            desc.uniform_blocks[0].glsl_uniforms[3].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[0].glsl_uniforms[3].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[3].glsl_name = "_20.ortho";
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = "_53.timer";
            desc.uniform_blocks[1].glsl_uniforms[1].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[1].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[1].glsl_name = "_53.daylight";
            desc.uniform_blocks[1].glsl_uniforms[2].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[1].glsl_uniforms[2].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[2].glsl_name = "_53.ortho";
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "block_color_tex_block_color_smp";
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.image_sampler_pairs[1].glsl_name = "block_sky_tex_block_sky_smp";
            desc.label = "block_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_hlsl5;
            desc.vertex_func.d3d11_target = "vs_5_0";
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_source_hlsl5;
            desc.fragment_func.d3d11_target = "ps_5_0";
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].hlsl_sem_name = "TEXCOORD";
            desc.attrs[0].hlsl_sem_index = 0;
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].hlsl_sem_name = "TEXCOORD";
            desc.attrs[1].hlsl_sem_index = 1;
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].hlsl_sem_name = "TEXCOORD";
            desc.attrs[2].hlsl_sem_index = 2;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 96;
            desc.uniform_blocks[0].hlsl_register_b_n = 0;
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].hlsl_register_b_n = 0;
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[0].hlsl_register_t_n = 0;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.images[1].hlsl_register_t_n = 1;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[0].hlsl_register_s_n = 0;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].hlsl_register_s_n = 1;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.label = "block_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_METAL_MACOS) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_metal_macos;
            desc.vertex_func.entry = "main0";
            desc.fragment_func.source = (const char*)fs_source_metal_macos;
            desc.fragment_func.entry = "main0";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 96;
            desc.uniform_blocks[0].msl_buffer_n = 0;
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].msl_buffer_n = 0;
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[0].msl_texture_n = 0;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.images[1].msl_texture_n = 1;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[0].msl_sampler_n = 0;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].msl_sampler_n = 1;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.label = "block_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_WGPU) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_wgsl;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_source_wgsl;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 96;
            desc.uniform_blocks[0].wgsl_group0_binding_n = 0;
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].wgsl_group0_binding_n = 8;
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[0].wgsl_group1_binding_n = 64;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.images[1].wgsl_group1_binding_n = 65;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[0].wgsl_group1_binding_n = 80;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].wgsl_group1_binding_n = 81;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.label = "block_shader";
        }
        return &desc;
    }
    return 0;
}
